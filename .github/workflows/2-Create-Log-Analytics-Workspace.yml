name: 2-Create-Log-Analytics-Workspace
on: workflow_dispatch

env:
  RESOURCE_GROUP: "ucorp-logging-rg"
  STORAGE_ACCOUNT_GROUP: "ucorp-storage2-rg"
  STORAGE_ACCOUNT_NAME: "ucorpwvdstorage2"

jobs:
  build:
    name: 2-Create-Log-Analytics-Workspace
    runs-on: windows-latest
    steps:
    # Authentication: log on to Azure with the AZURE_CREDENTIALS secret
    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true 
    
    # Azure PowerShell: Run inline script    
    - name: Run Azure PowerShell script (inline)
      uses: azure/powershell@v1
      with:
        inlineScript: |
          # Read the environment variables in PowerShell
          [string]$ResourceGroup = [System.Environment]::GetEnvironmentVariable('RESOURCE_GROUP')
          [string]$StorageAccoutResourceGroup = [System.Environment]::GetEnvironmentVariable('STORAGE_ACCOUNT_GROUP')
          [string]$StorageAccountName = [System.Environment]::GetEnvironmentVariable('STORAGE_ACCOUNT_NAME')

          $Tags = @{"Environment"="WVD Production"}
          $WorkspaceName = "ucorp-wvdlog-law"

          # Create the resource group if needed
          try {
            Get-AzResourceGroup -Name $ResourceGroup -ErrorAction Stop
          } catch {
            New-AzResourceGroup -Name $ResourceGroup -Location "westeurope" -Tag $Tags
          }

          ## Create a Template Parameter Object (hashtable)
          $objTemplateParameter = @{
          "workspaceName" = $WorkspaceName;
          "location" = "westeurope";
          "dataRetention" = 30;
          "sku" = "PerGB2018";
          "applicationDiagnosticsStorageAccountResourceGroup" = $StorageAccoutResourceGroup;
          "applicationDiagnosticsStorageAccountName" = $StorageAccountName;
          }

          # Temp location for the ARM template that will be used by this script (discarded when runbook is finished)
          $jsonARMTemplateFile = [string]($env:TEMP + "\2-ARM-Create-Log-Analytics.json")
                
          # storage location for custom ARM template
          $templateUrl="https://raw.githubusercontent.com/iuenk/WVD/main/ARMTemplates/2-ARM-Create-Log-Analytics.json"

          # Retrieve the template file and save it in a temp file location
          Invoke-WebRequest -Uri $templateUrl -OutFile $jsonARMTemplateFile -UseBasicParsing

          # ARM Template file
          ## Add SessionHosts to existing WVD Hostpool, based on ARM Template
          New-AzResourceGroupDeployment -ResourceGroupName $ResourceGroup -TemplateFile $jsonARMTemplateFile -TemplateParameterObject $objTemplateParameter -Tag $Tags -Verbose

        azPSVersion: 'latest'
